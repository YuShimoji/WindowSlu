# C# and .NET
#
# Get latest from https://github.com/github/gitignore/blob/main/DotNet.gitignore

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015 cache/options directory
.vs/
# Visual Studio 2017 cache/options directory
.vs
# Uncomment if you have tasks that create the project's launch settings
# .vs/ProjectEvaluation/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.log

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a Visual Studio extension that provides on-the-fly code analysis
# and reporting and should be ignored.
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a Visual Studio extension that provides on-the-fly code analysis
# and reporting and should be ignored.
.jc/

# TeamCity is a continuous integration server.
_TeamCity*

# DotCover is a code coverage tool.
*.dotcover

# AxoCover is a code coverage tool.
.axoCover/*
!.axoCover/settings.json

# Visual Studio Code Source Control
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Rider is a cross-platform .NET IDE.
.idea/
*.sln.iml

# SonarQube Scanner for MSBuild
.sonarlint/

# Docker
docker-compose.override.yml
secrets.dev.yaml
**/secrets.dev.yaml

# Mac/Linux
*.DS_Store

# User-specific files
**/[Pp]roperties/[Ll]aunch[Ss]ettings.json

# Environment variables
.env

# NuGet Packages
# These packages are restored prior to building the project.
*.nupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Unused packages cleaned up by Visual Studio
**/[Pp]ackages/repositories.config

# NuGet v3's project-json-based packages folder
**/project.assets.json
**/project.nuget.cache

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Pakket - Uncomment if you are using it
# .paket/paket.exe
# paket-files/

# FAKE - F# Make
.fake/

# Paket v5
.paket/

# Some paket files should be checked in. See
# https://fsprojects.github.io/Paket/getting-started.html#paket-and-source-control
!/.paket/paket.bootstrapper.exe
!/.paket/paket.config
!/.paket/paket.dependencies
!/.paket/paket.lock
!/.paket/paket.references
!/.paket/paket.targets
!/.paket/paket.local

# Service Fabric
**/pkg/

# Windows CE files
*.pde

# Fody - A framework for weaving .NET assemblies
**/FodyWeavers.xml
**/FodyWeavers.xsd

# ILRepack
ilrepack.log

# Netlify
.netlify

# NetSparkle
netsparkle-*.json

# Squirrel.Windows
/build/

# IDE Build Folders
/Source/Builder/Output/

# Bitbucket Pipelines
bitbucket-pipelines.yml

# Workload identity federated credential
*.json.e

# Custom files
**/App.config
**/app.config

# Ignore specific settings files created by the application
settings.json
*.log
debug_output.log 